spring:
  application:
    name: auth-service
  
  # Database Configuration
  datasource:
    url: jdbc:mysql://localhost:3306/smartoutlet_auth?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: smartoutlet
    password: smartoutlet123
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
        generate_statistics: false
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
    open-in-view: false
  
  # Flyway Migration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    sql-migration-prefix: V
    sql-migration-suffix: .sql
    validate-on-migrate: true
    clean-disabled: true
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /
  compression:
    enabled: true
  error:
    include-message: always
    include-binding-errors: always

# JWT Configuration
jwt:
  secret: SmartOutletSecretKeyForJWTTokenGenerationAndValidation2024!@#$%^&*
  expiration: 86400000 # 24 hours in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds
  issuer: smartoutlet-auth-service
  header: Authorization
  prefix: "Bearer "

# Management & Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

# Logging Configuration
logging:
  level:
    com.smartoutlet: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/auth-service.log

# Application Specific Configuration
app:
  security:
    bcrypt-rounds: 12
    max-login-attempts: 5
    account-lockout-duration: 300000 # 5 minutes
  
  cors:
    allowed-origins: 
      - http://localhost:3000
      - http://localhost:8080
    allowed-methods: 
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers: 
      - Authorization
      - Content-Type
      - X-Requested-With
    max-age: 3600

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:mysql://mysql:3306/smartoutlet_auth?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: smartoutlet
    password: smartoutlet123

server:
  port: 8081

logging:
  level:
    com.smartoutlet: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: WARN

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
  flyway:
    enabled: false
  
  h2:
    console:
      enabled: true

jwt:
  secret: test-secret-key-for-testing
  expiration: 3600000 # 1 hour for testing