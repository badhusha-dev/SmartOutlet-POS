# ======================================
# SmartOutlet API Gateway Configuration
# ======================================

# Server Configuration
server.port=8080
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true

# Application Information
spring.application.name=api-gateway
management.endpoints.web.exposure.include=health,info,metrics,gateway

# Gateway Configuration
spring.cloud.gateway.enabled=true
spring.cloud.gateway.discovery.locator.enabled=false
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

# CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000,http://localhost:8080
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

# Route Configuration
# Auth Service Routes
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=${AUTH_SERVICE_URL:http://localhost:8081}
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=0

# Outlet Service Routes
spring.cloud.gateway.routes[1].id=outlet-service
spring.cloud.gateway.routes[1].uri=${OUTLET_SERVICE_URL:http://localhost:8082}
spring.cloud.gateway.routes[1].predicates[0]=Path=/outlets/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=0

# Product Service Routes
spring.cloud.gateway.routes[2].id=product-service
spring.cloud.gateway.routes[2].uri=${PRODUCT_SERVICE_URL:http://localhost:8083}
spring.cloud.gateway.routes[2].predicates[0]=Path=/products/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=0

# POS Service Routes
spring.cloud.gateway.routes[3].id=pos-service
spring.cloud.gateway.routes[3].uri=${POS_SERVICE_URL:http://localhost:8084}
spring.cloud.gateway.routes[3].predicates[0]=Path=/pos/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=0

# Expense Service Routes
spring.cloud.gateway.routes[4].id=expense-service
spring.cloud.gateway.routes[4].uri=${EXPENSE_SERVICE_URL:http://localhost:8085}
spring.cloud.gateway.routes[4].predicates[0]=Path=/expenses/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=0

# Health Check Routes
spring.cloud.gateway.routes[5].id=auth-health
spring.cloud.gateway.routes[5].uri=${AUTH_SERVICE_URL:http://localhost:8081}
spring.cloud.gateway.routes[5].predicates[0]=Path=/health/auth
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/health/auth,/auth/actuator/health

spring.cloud.gateway.routes[6].id=outlet-health
spring.cloud.gateway.routes[6].uri=${OUTLET_SERVICE_URL:http://localhost:8082}
spring.cloud.gateway.routes[6].predicates[0]=Path=/health/outlet
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/health/outlet,/outlets/actuator/health

spring.cloud.gateway.routes[7].id=product-health
spring.cloud.gateway.routes[7].uri=${PRODUCT_SERVICE_URL:http://localhost:8083}
spring.cloud.gateway.routes[7].predicates[0]=Path=/health/product
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/health/product,/products/actuator/health

spring.cloud.gateway.routes[8].id=pos-health
spring.cloud.gateway.routes[8].uri=${POS_SERVICE_URL:http://localhost:8084}
spring.cloud.gateway.routes[8].predicates[0]=Path=/health/pos
spring.cloud.gateway.routes[8].filters[0]=RewritePath=/health/pos,/pos/actuator/health

spring.cloud.gateway.routes[9].id=expense-health
spring.cloud.gateway.routes[9].uri=${EXPENSE_SERVICE_URL:http://localhost:8085}
spring.cloud.gateway.routes[9].predicates[0]=Path=/health/expense
spring.cloud.gateway.routes[9].filters[0]=RewritePath=/health/expense,/expenses/actuator/health

# Logging Configuration
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.web=INFO
logging.level.reactor.netty=INFO
logging.level.com.smartoutlet.gateway=DEBUG

# Actuator Configuration
management.endpoint.health.show-details=always
management.endpoint.gateway.enabled=true

# Profile-specific configurations
spring.profiles.active=default

# ======================================
# Docker Profile Configuration
# ======================================
---
spring.config.activate.on-profile=docker

# Service URLs for Docker
auth.service.url=http://auth-service:8081
outlet.service.url=http://outlet-service:8082
product.service.url=http://product-service:8083
pos.service.url=http://pos-service:8084
expense.service.url=http://expense-service:8085

# Gateway Route Updates for Docker
spring.cloud.gateway.routes[0].uri=http://auth-service:8081
spring.cloud.gateway.routes[1].uri=http://outlet-service:8082
spring.cloud.gateway.routes[2].uri=http://product-service:8083
spring.cloud.gateway.routes[3].uri=http://pos-service:8084
spring.cloud.gateway.routes[4].uri=http://expense-service:8085
spring.cloud.gateway.routes[5].uri=http://auth-service:8081
spring.cloud.gateway.routes[6].uri=http://outlet-service:8082
spring.cloud.gateway.routes[7].uri=http://product-service:8083
spring.cloud.gateway.routes[8].uri=http://pos-service:8084
spring.cloud.gateway.routes[9].uri=http://expense-service:8085

# CORS Configuration for Docker
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000,http://localhost:8080

# Logging for Docker
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=INFO
logging.level.com.smartoutlet.gateway=INFO