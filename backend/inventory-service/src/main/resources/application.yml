server:
  port: 8086
  servlet:
    context-path: /api/inventory

spring:
  application:
    name: inventory-service
  
  datasource:
    url: ${MYSQL_URL:jdbc:mysql://localhost:3306/smartoutlet_inventory?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true}
    username: ${MYSQL_USERNAME:smartoutlet_user}
    password: ${MYSQL_PASSWORD:smartoutlet_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true

  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null

# Security
security:
  jwt:
    secret: ${JWT_SECRET:SmartOutletJWTSecretKeyForDevelopment2024!}
    expiration: ${JWT_EXPIRATION:86400000}

# Logging
logging:
  level:
    com.smartoutlet.inventory: ${LOG_LEVEL:INFO}
    org.springframework.security: DEBUG
    org.hibernate.SQL: ${SHOW_SQL:false}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SHOW_SQL:false}

# Springdoc OpenAPI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

# Business Configuration
inventory:
  expiry:
    warning-days: 30  # Days before expiry to show warning
    critical-days: 7  # Days before expiry to show critical alert
  reorder:
    check-schedule: "0 0 8 * * ?" # Daily at 8 AM
  fifo:
    enabled: true
    enforce-strict: false # If true, prevents selling newer stock before older